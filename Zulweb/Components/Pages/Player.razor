@page "/player"
@using Zulweb.Infrastructure
@using Zulweb.Components.Controls
@rendermode InteractiveServer
@inject SetlistController Setlist;
@implements IDisposable

<PageTitle>Setlist</PageTitle>

@if (!Setlist.Initialized)
{
    <div class="col-sm-12 col-md-8 mx-auto text-center">
        <em>Loading ...</em>
    </div>
    return;
}

<div class="container-fluid">
    @if (Setlist.RehearsalMode)
    {
        <div class="alert alert-warning text-center rounded-0 py-2" role="alert">
            <strong>REHEARSAL MODE</strong>
        </div>
    }

    <PlayerTransport/>

    <ul class="list-group col-sm-12 col-md-8 mx-auto">
        @foreach (var item in Setlist.Items)
        {
            <PlayerSetlistItem Item="item"/>
        }
    </ul>
</div>

@code {
    private CancellationTokenSource? _cts;


    protected override Task OnInitializedAsync()
    {
        _cts = new CancellationTokenSource();
        Task.Run(async () =>
        {
            var token = _cts.Token;
            while (!token.IsCancellationRequested)
            {
                await Task.Delay(100, token);
                await InvokeAsync(StateHasChanged);
            }
        });
        return Task.CompletedTask;
    }

    protected override async Task OnParametersSetAsync()
    {
        if (!Setlist.Initialized)
            await Setlist.LoadFromFile();
    }

    public void Dispose()
    {
        _cts?.Cancel();
    }

}